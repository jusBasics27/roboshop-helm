apiVersion: apps/v1
kind: Deployment
metadata:
  name: roboshop-{{ .Values.appName }}
  labels:
   {{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas  }}
  selector:
    matchLabels:
      {{- include "common.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      containers:
      - name: {{ .Values.appName }}
#        image: public.ecr.aws/w8x4g9h7/roboshop-v3/{{ .Values.appName }}
        image: 137068255381.dkr.ecr.us-east-1.amazonaws.com/roboshop-{{ .Values.appName }}:{{ .Values.COMMIT_ID }}
        ports:
        - containerPort: {{ .Values.service.containerPort }}
          name: app
        envFrom:
        - secretRef:
            name: {{ .Values.appName }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: app
          initialDelaySeconds: 5
          periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /liveness
              port: app
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
#        env:
#        {{- range $k, $v := .Values.env }}
#          - name: {{ $k }}
#            value: {{ $v | quote }}
#        {{- end }}
#Notes
#  /readiness should check if the app is ready to serve traffic (e.g., DB connections).
#  /liveness should check if the app is still running (e.g., checking a heartbeat).
          resources:
            requests:
              memory: {{ .Values.resources.requestsMemory }}
              cpu: {{ .Values.resources.requestsCpu }}
            limits:
              memory: {{ .Values.resources.limitsMemory }}
              cpu: {{ .Values.resources.limitsCpu }}